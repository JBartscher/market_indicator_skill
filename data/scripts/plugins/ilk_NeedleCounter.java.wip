package data.scripts.plugins;

import com.fs.starfarer.api.Global;
import com.fs.starfarer.api.combat.CombatEngineAPI;
import com.fs.starfarer.api.combat.CombatEntityAPI;
import com.fs.starfarer.api.combat.DamageType;
import com.fs.starfarer.api.combat.DamagingProjectileAPI;
import com.fs.starfarer.api.combat.ShipAPI;
import java.awt.Color;
import org.lwjgl.util.vector.Vector2f;
import java.awt.Toolkit;
import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class ilk_NeedleCounter {
    
    public int needleCount = 0; //number of needles currently tracked
    public int waitTime = 2000; //time to detonation in milliseconds after first hit
    
    ilk_NeedleCounter() {
        
    }
    
    //defines a timer that plays test sound on end
    ActionListener action = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                TestSound();
            }
        };
    Timer countDown = new Timer(waitTime, action);
    
    public void NeedleHit() {
        //reset timer if present, add a needle, start countdown to detonation
        countDown.stop();
        needleCount++;
        countDown.setRepeats(false);
        countDown.start();
    }

    public static void TestSound() {
        Toolkit.getDefaultToolkit().beep();
        //countDown.stop(); //non-static method in static context
    }


    /*    class Detonate extends TimerTask {

     private float damageMult;
     private final int damage = 50;

     @Override
     public void run() {
     if (needleCount < 5) {
     damageMult = 1f;
     } else if (needleCount >= 5 && needleCount < 10) {
     damageMult = 2f;
     } else if (needleCount >= 10 && needleCount < 15) {
     damageMult = 3f;
     } else {
     damageMult = 4f;
     }

     //deals damage and resets needle count
     Global.getCombatEngine().applyDamage(target, point, damage * damageMult,
     DamageType.HIGH_EXPLOSIVE, 0, true, true, target);
     Global.getCombatEngine().spawnExplosion(
     point, // Location
     target.getVelocity(), // Velocity
     Color.pink,
     50 + (float) Math.random() * 100, // Size
     2 + (float) Math.random() * 2); // Duration
     Global.getSoundPlayer().playSound("hit_heavy", 1, 1, point, target.getVelocity());

     needleCount = 0;
     }
     }
     */
}
